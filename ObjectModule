

Функция ОсновнаяРабота(аргСтрукАргументы) Экспорт
	
	ТабЗначРезультат = Новый ТаблицаЗначений;
	
	стрUriКорневогоПакета = "http://web.cbr.ru/";
	
	
	обПроксиЕжедневныеДанные = WSССылки.ЕжденевныеДанныеЦентробанка.СоздатьWSПрокси(стрUriКорневогоПакета, "DailyInfo", "DailyInfoSoap");
	
	
	Если аргСтрукАргументы.перКоманда = 1 Тогда
		
		стрНазваниеМетода = "GetCursOnDate"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода); 	
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);	
		
		обАргументы.On_date = аргСтрукАргументы.стрДатаНачала;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.GetCursOnDate(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("ValuteData") = Неопределено Тогда 
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram.ValuteData.ValuteCursOnDate);
			КонецЕсли; 
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 2 Тогда
		
		стрНазваниеМетода = "EnumValutes";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.Seld = аргСтрукАргументы.флПоказыватьЕжемесячныеВалюты;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.EnumValutes(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("ValuteData") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram.ValuteData[стрНазваниеМетода]);
			КонецЕсли;	
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 3 Тогда
		
		стрНазваниеМетода = "GetCursDynamic";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);	
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.FromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		обАргументы.ValutaCode = аргСтрукАргументы.стрКодВалюты;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.GetCursDynamic(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("ValuteData") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram.ValuteData.ValuteCursDynamic);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 4 Тогда
		
		стрНазваниеМетода = "KeyRate";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;	
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;	
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.KeyRate(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда		
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].KR);
			КонецЕсли;
			
		КонецЕсли;
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 5 Тогда
		
		стрНазваниеМетода = "DragMetDynamic";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;	
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.DragMetDynamic(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("DragMetall") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram.DragMetall.DrgMet);	
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 6 Тогда 
		
		стрНазваниеМетода = "NewsInfo";
		стрНазваниеРезультата = стрНазваниеМетода + "Result"; 
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.NewsInfo(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].News);
			КонецЕсли;
			
		КонецЕсли;
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 7 Тогда 
		
		стрНазваниеМетода = "SwapDynamic";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.SwapDynamic(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
			ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].Swap);
			КонецЕсли;
					
		КонецЕсли;  
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 8 Тогда
		
		стрНазваниеМетода = "DepoDynamic";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.DepoDynamic(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].Depo);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 9 Тогда 
		
		стрНазваниеМетода = "OstatDynamic";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate =  аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.OstatDynamic(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].Ostat);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 10 Тогда 
		
		стрНазваниеМетода = "OstatDepoNew";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate =  аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.OstatDepoNew(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("OD") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram.OD.odn);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 11 Тогда
		
		стрНазваниеМетода = "mrrf"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.mrrf(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("mr") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram.mr);
			КонецЕсли;
					
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 12 Тогда
		
		стрНазваниеМетода = "mrrf7D"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.mrrf7D(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("mmrf7d") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["mmrf7d"].mr);
			КонецЕсли;
					
		КонецЕсли;
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 13 Тогда
		
		стрНазваниеМетода = "Saldo"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.Saldo(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].So);
			КонецЕсли;
					
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 14 Тогда
		
		стрНазваниеМетода = "RuoniaSV";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.RuoniaSV(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].ra);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 15 Тогда
		
		стрНазваниеМетода = "Ruonia";
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.Ruonia(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].ro);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 16 Тогда
		
		стрНазваниеМетода = "MKR"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.MKR(обАргументы); 
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("mkr_base") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["mkr_base"].MKR);
			КонецЕсли;
					
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 17 Тогда
		
		стрНазваниеМетода = "DV"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.DV(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("DV_base") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram.DV_base.DV);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 18 Тогда
		
		стрНазваниеМетода = "Repo_debt2"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.Repo_debt2(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].RD);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 19 Тогда
		
		стрНазваниеМетода = "Coins_base"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.Coins_base(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].CB);
			КонецЕсли;
					
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 20 Тогда
		
		стрНазваниеМетода = "Overnight"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.Overnight(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].OB);
			КонецЕсли;
					
		КонецЕсли;  
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 21 Тогда
		
		стрНазваниеМетода = "Bauction"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.Bauction(обАргументы); 
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].BA);
			КонецЕсли;
					
		КонецЕсли;
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 22 Тогда
		
		стрНазваниеМетода = "SwapDayTotal"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.SwapDayTotal(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].SDT);
			КонецЕсли;
					
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 23 Тогда
		
		стрНазваниеМетода = "SwapMonthTotal"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.SwapMonthTotal(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].SMT);
			КонецЕсли;
					
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 24 Тогда
		
		стрНазваниеМетода = "SwapInfoSell"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.SwapInfoSell(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].SSU);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 25 Тогда
		
		стрНазваниеМетода = "SwapInfoSellVol"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.SwapInfoSellVol(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].SSUV);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 26 Тогда
		
		стрНазваниеМетода = "Bliquidity"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.Bliquidity(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].BL);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 27 Тогда
		
		стрНазваниеМетода = "BiCurBase"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.BiCurBase(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].BCB);
			КонецЕсли;
			
		КонецЕсли;
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 28 Тогда
		
		стрНазваниеМетода = "BiCurBacket"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.BiCurBacket(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].BC);
			КонецЕсли;
			
		КонецЕсли; 
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 29 Тогда
		
		стрНазваниеМетода = "RepoDebtUSD"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.RepoDebtUSD(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить(стрНазваниеМетода) = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram[стрНазваниеМетода].rd);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 30 Тогда
		
		стрНазваниеМетода = "MainInfoXML"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.MainInfoXML(обАргументы);
		
		ТабЗначРезультат = Новый ТаблицаЗначений;		
		ТабЗначРезультат.Колонки.Добавить("Title");
		ТабЗначРезультат.Колонки.Добавить("Date"); 
		
		ЗаполнитьЗначенияСвойств(ТабЗначРезультат.Добавить(), обРезультатЗапроса[стрНазваниеРезультата].RegData.GoldBaks);
		ЗаполнитьЗначенияСвойств(ТабЗначРезультат.Добавить(), обРезультатЗапроса[стрНазваниеРезультата].RegData.Inflation);
		ЗаполнитьЗначенияСвойств(ТабЗначРезультат.Добавить(), обРезультатЗапроса[стрНазваниеРезультата].RegData.keyRate);
		ЗаполнитьЗначенияСвойств(ТабЗначРезультат.Добавить(), обРезультатЗапроса[стрНазваниеРезультата].RegData.stavka_ref);
				
	ИначеЕсли аргСтрукАргументы.перКоманда = 31 Тогда
		
		стрНазваниеМетода = "XVolXML"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.fromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.XVolXML(обАргументы);
		
		ТабЗначРезультат = Новый ТаблицаЗначений;		
		ТабЗначРезультат.Колонки.Добавить("Title");
		ТабЗначРезультат.Колонки.Добавить("Date"); 
		
		ЗаполнитьЗначенияСвойств(ТабЗначРезультат.Добавить(), обРезультатЗапроса[стрНазваниеРезультата].RegData.GoldBaks);
		ЗаполнитьЗначенияСвойств(ТабЗначРезультат.Добавить(), обРезультатЗапроса[стрНазваниеРезультата].RegData.Inflation);
		ЗаполнитьЗначенияСвойств(ТабЗначРезультат.Добавить(), обРезультатЗапроса[стрНазваниеРезультата].RegData.keyRate);
		ЗаполнитьЗначенияСвойств(ТабЗначРезультат.Добавить(), обРезультатЗапроса[стрНазваниеРезультата].RegData.stavka_ref);
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 32 Тогда
		
		стрНазваниеМетода = "OmodInfoXML"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.OmodInfoXML(обАргументы);
		
		ВызватьИсключение "Не доделано. Подумать как изобразить XDTO как дерево."		
			
	ИначеЕсли аргСтрукАргументы.перКоманда = 33 Тогда
		
		стрНазваниеМетода = "AllDataInfoXML"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.AllDataInfoXML(обАргументы);
		
		ВызватьИсключение "Не доделано. Подумать как изобразить XDTO как дерево."
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 34 Тогда
		
		стрНазваниеМетода = "GetLatestReutersDateTime"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.GetLatestReutersDateTime(обАргументы);
		
		ТабЗначРезультат = Новый ТаблицаЗначений;		
		ТабЗначРезультат.Колонки.Добавить("Свойство");
		ТабЗначРезультат.Колонки.Добавить("Значение");
		
		новаяСтрока = ТабЗначРезультат.Добавить();  
		новаяСтрока.Свойство = обРезультатЗапроса.Свойства().Получить(стрНазваниеРезультата).Имя;
		новаяСтрока.Значение = обРезультатЗапроса[стрНазваниеРезультата];
		
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 35 Тогда
		
		стрНазваниеМетода = "EnumReutersValutes"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.EnumReutersValutes(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("ReutersValutesList") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["ReutersValutesList"].
				EnumRValutes);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 36 Тогда
		
		стрНазваниеМетода = "GetReutersCursOnDate"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.On_date = аргСтрукАргументы.стрДатаНачала;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.GetReutersCursOnDate(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("ReutersValutesList") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["ReutersValutesList"].
				EnumRValutes);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли аргСтрукАргументы.перКоманда = 37 Тогда	
		
		стрНазваниеМетода = "GetReutersCursDynamic"; 
		стрНазваниеРезультата = стрНазваниеМетода + "Result";
		
		обТипАргумента = обПроксиЕжедневныеДанные.ФабрикаXDTO.Пакеты.Получить(стрUriКорневогоПакета).Получить(стрНазваниеМетода);
		обАргументы = обПроксиЕжедневныеДанные.ФабрикаXDTO.Создать(обТипАргумента);
		
		обАргументы.FromDate = аргСтрукАргументы.стрДатаНачала;
		обАргументы.ToDate = аргСтрукАргументы.стрДатаКонца;
		обАргументы.NumCode = аргСтрукАргументы.перНомерВалюты;
		
		обРезультатЗапроса = обПроксиЕжедневныеДанные.GetReutersCursDynamic(обАргументы);
		
		Если Не обРезультатЗапроса[стрНазваниеРезультата].Свойства().Получить("diffgram") = Неопределено Тогда			
			
			Если Не обРезультатЗапроса[стрНазваниеРезультата].diffgram.Свойства().Получить("ReutersValuteData") = Неопределено Тогда
				ТабЗначРезультат = ЗаписатьСписокXdtoВТаблицу(обРезультатЗапроса[стрНазваниеРезультата].diffgram["ReutersValuteData"].VCD);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТабЗначРезультат;
	                     
КонецФункции
 
 

Функция СоздатьXmlИзXdto(аргXdtoОбъект)
	
	обЗапись = Новый ЗаписьXML;
	обЗапись.УстановитьСтроку();	
	ФабрикаXDTO.ЗаписатьXML(обЗапись, аргXdtoОбъект);
	
	Возврат обЗапись.Закрыть();	
	
КонецФункции



Функция ЗаписатьСписокXdtoВТаблицу(аргXdtoОбъект)
	
	ТабЗначРезультат = Новый ТаблицаЗначений; 
	

	Если Типзнч(аргXdtoОбъект) = Тип("СписокXDTO") Тогда
		
		Если аргXdtoОбъект.Количество() > 0 Тогда 
			
			обКоллекция = аргXdtoОбъект[0].Свойства();
			
			Для Каждого элемент Из обКоллекция Цикл
				ТабЗначРезультат.Колонки.Добавить(элемент.Имя)
			КонецЦикла;
			
			Для Каждого элемент Из аргXdtoОбъект Цикл
				ЗаполнитьЗначенияСвойств(ТабЗначРезультат.Добавить(), элемент);
			КонецЦикла;
			
		КонецЕсли;	
		
		
	Иначе		
		ЗаполнитьЗначенияСвойств(ТабЗначРезультат.Добавить(), аргXdtoОбъект);		
	КонецЕсли;

	
	Возврат ТабЗначРезультат;
	
КонецФункции



Функция СоздатьXdtoИзXml(аргСтрXml, аргОбТип = Неопределено)

	обЧитатель = Новый ЧтениеXML;
	обЧитатель.УстановитьСтроку(аргСтрXml);
	
	Если Не аргОбТип = Неопределено Тогда
		Возврат ФабрикаXDTO.ПрочитатьXML(обЧитатель, аргОбТип);  
	КонецЕсли; 
	
	Возврат ФабрикаXDTO.ПрочитатьXML(обЧитатель);
		
КонецФункции

	
	
	







